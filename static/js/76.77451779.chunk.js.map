{"version":3,"file":"static/js/76.77451779.chunk.js","mappings":"wNACA,EAAuB,mB,SCgDvB,EAzCa,WACX,OAA4BA,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAkBR,IAfAE,EAAAA,EAAAA,YAAU,WACRH,GAAW,IAEXI,EAAAA,EAAAA,IAAkBH,GACfI,MAAK,SAAAC,GACJR,EAAUQ,EAAcC,KACzB,IACAC,OAAM,SAAAC,GACLC,QAAQC,IAAIF,EACb,IACAG,SAAQ,WACPZ,GAAW,EACZ,GACJ,GAAE,CAACC,IAECJ,EAIL,OACE,iBAAKgB,UAAWC,EAAhB,UACGf,IAAW,SAACgB,EAAA,EAAD,KACZ,wBACGlB,EAAOmB,KAAI,gBAAGC,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,GAAIC,EAArB,EAAqBA,KAAMC,EAA3B,EAA2BA,UAA3B,OACV,2BACE,gBAAKC,MAAM,MAAMC,IAAG,UA3BX,oCA2BW,OAAkBL,GAAgBM,IAAKJ,KAC3D,uBAAIA,KACJ,yBAAG,cAAYC,OAHRF,EADC,QAUnB,C,uJC/CD,IAAMM,EAAU,mCACVC,EAAW,+BAEXC,EAAW,WAAe,IAAdC,EAAa,uDAAP,GACtB,OAAOC,MAAMD,GAAKtB,MAAK,SAAAwB,GACrB,OAAIA,EAASC,GACJD,EAASE,OACJC,QAAQC,OAAO,IAAIC,MAAJ,cAC9B,GACF,EAEYC,EAAsB,WACjC,OAAOT,EAAS,GAAD,OAAID,EAAJ,qCAAyCD,GACzD,EAGYY,EAAiB,SAAAjB,GAC5B,OAAOO,EAAS,GAAD,OAAID,EAAJ,iCAAqCD,EAArC,kBAAsDL,GACtE,EAEYkB,EAAoB,SAAApC,GAC/B,OAAOyB,EAAS,GAAD,OAAID,EAAJ,kBAAsBxB,EAAtB,oBAAyCuB,GACzD,EAEYpB,EAAoB,SAAAH,GAC/B,OAAOyB,EAAS,GAAD,OAAID,EAAJ,kBAAsBxB,EAAtB,4BAAiDuB,GACjE,EAEYc,EAAoB,SAAArC,GAC/B,OAAOyB,EAAS,GAAD,OAAID,EAAJ,kBAAsBxB,EAAtB,4BAAiDuB,GACjE,C","sources":["webpack://react-hw-05-movies/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx","services/fetchAPI.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"List\":\"Cast_List__AZLS7\"};","import React from 'react';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieCredits } from '../../services/fetchAPI';\nimport { Loader } from '../Loader/Loader';\nimport css from './Cast.module.css'\n\nconst Cast = () => {\n  const [actors, setActors] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const { movieId } = useParams();\n  const imgBaseUrl = 'https://image.tmdb.org/t/p/w500/';\n\n  useEffect(() => {\n    setLoading(true);\n\n    fetchMovieCredits(movieId)\n      .then(searchResults => {\n        setActors(searchResults.cast);\n      })\n      .catch(error => {\n        console.log(error);\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  }, [movieId]);\n\n  if (!actors) {\n    return;\n  }\n\n  return (\n    <div className={css.List}>\n      {loading && <Loader />}\n      <ul>\n        {actors.map(({ profile_path, id, name, character }) => (\n          <li key={id}>\n            <img width=\"100\" src={`${imgBaseUrl}${profile_path}`} alt={name} />\n            <p>{name}</p>\n            <p>Character: {character}</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Cast;\n","const API_KEY = 'dfe97c9693096be016a960b4c69a6096';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nconst fetchApi = (url = '') => {\n  return fetch(url).then(response => {\n    if (response.ok) {\n      return response.json();\n    } else return Promise.reject(new Error(`not found `));\n  });\n};\n\nexport const fetchTrendingMovies = () => {\n  return fetchApi(`${BASE_URL}/trending/all/day?api_key=${API_KEY}`);\n};\n\n\nexport const getMovieByName = name => {\n  return fetchApi(`${BASE_URL}/search/movie?api_key=${API_KEY}&query=${name}`);\n};\n\nexport const fetchMovieDetails = movieId => {\n  return fetchApi(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`);\n};\n\nexport const fetchMovieCredits = movieId => {\n  return fetchApi(`${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`);\n};\n\nexport const fetchMovieReviews = movieId => {\n  return fetchApi(`${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`);\n};\n"],"names":["useState","actors","setActors","loading","setLoading","movieId","useParams","useEffect","fetchMovieCredits","then","searchResults","cast","catch","error","console","log","finally","className","css","Loader","map","profile_path","id","name","character","width","src","alt","API_KEY","BASE_URL","fetchApi","url","fetch","response","ok","json","Promise","reject","Error","fetchTrendingMovies","getMovieByName","fetchMovieDetails","fetchMovieReviews"],"sourceRoot":""}