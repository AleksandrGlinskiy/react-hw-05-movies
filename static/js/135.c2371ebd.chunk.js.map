{"version":3,"file":"static/js/135.c2371ebd.chunk.js","mappings":"yNACA,GAAgB,SAAW,+BAA+B,UAAY,gCAAgC,SAAW,+BAA+B,KAAO,4B,SC2EvJ,EAvEqB,WAAO,IAAD,EACzB,GAAwCA,EAAAA,EAAAA,UAAS,MAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACMC,GAAWC,EAAAA,EAAAA,MACTC,GAAYC,EAAAA,EAAAA,MAAZD,QAEFE,GAAsBC,EAAAA,EAAAA,SAAO,UAAAL,EAASM,aAAT,eAAgBC,OAAQ,WAY3D,IAVAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAkBP,GACfQ,MAAK,SAAAC,GACJZ,EAAgBY,EACjB,IACAC,OAAM,SAAAC,GACLC,QAAQC,IAAIF,EACb,GACJ,GAAE,CAACX,KAECJ,EACH,OAAO,KAGT,IAAQkB,EACNlB,EADMkB,YAAaC,EACnBnB,EADmBmB,aAAcC,EACjCpB,EADiCoB,SAAUC,EAC3CrB,EAD2CqB,OAAQC,EACnDtB,EADmDsB,MAAOC,EAC1DvB,EAD0DuB,aAGtDC,EAAe,IAAIC,KAAKF,GAE9B,OACE,iCACE,SAAC,KAAD,CAAMG,UAAWC,EAAAA,SAAcC,GAAItB,EAAoBuB,QAAvD,SAAgE,oBAGlE,iBAAKH,UAAWC,EAAAA,UAAhB,WAEE,gBAAKG,MAAM,QAAQC,IAAG,UAVP,oCAUO,OAAkBb,GAAec,IAAKV,KAE5D,4BACE,0BACGA,EAAM,KAAGE,EAAaS,cAAc,QAEvC,yBAAG,eAAad,MAChB,wBAAI,cACJ,uBAAIC,KACJ,wBAAI,YACJ,eAAIM,UAAWC,EAAAA,KAAf,SACGN,EAAOa,KAAI,SAAAC,GAAK,OACf,eAAIT,UAAWC,EAAAA,SAAf,SAA6CQ,EAAMC,MAAjBD,EAAME,GADzB,aAOrB,iBAAKX,UAAWC,EAAAA,SAAhB,WACE,uBAAG,4BACH,2BACE,yBACE,SAAC,KAAD,CAAMC,GAAG,OAAOpB,MAAO,CAAEC,KAAMH,GAA/B,SAAsD,YAIxD,yBACE,SAAC,KAAD,CAAMsB,GAAG,UAAUpB,MAAO,CAAEC,KAAMH,GAAlC,SAAyD,kBAK7D,SAAC,KAAD,SAIP,C,uJC1ED,IAAMgC,EAAU,mCACVC,EAAW,+BAEXC,EAAW,WAAe,IAAdC,EAAa,uDAAP,GACtB,OAAOC,MAAMD,GAAK7B,MAAK,SAAA+B,GACrB,OAAIA,EAASC,GACJD,EAASE,OACJC,QAAQC,OAAO,IAAIC,MAAJ,cAC9B,GACF,EAEYC,EAAsB,WACjC,OAAOT,EAAS,GAAD,OAAID,EAAJ,qCAAyCD,GACzD,EAGYY,EAAiB,SAAAd,GAC5B,OAAOI,EAAS,GAAD,OAAID,EAAJ,iCAAqCD,EAArC,kBAAsDF,GACtE,EAEYzB,EAAoB,SAAAP,GAC/B,OAAOoC,EAAS,GAAD,OAAID,EAAJ,kBAAsBnC,EAAtB,oBAAyCkC,GACzD,EAEYa,EAAoB,SAAA/C,GAC/B,OAAOoC,EAAS,GAAD,OAAID,EAAJ,kBAAsBnC,EAAtB,4BAAiDkC,GACjE,EAEYc,EAAoB,SAAAhD,GAC/B,OAAOoC,EAAS,GAAD,OAAID,EAAJ,kBAAsBnC,EAAtB,4BAAiDkC,GACjE,C","sources":["webpack://react-hw-05-movies/./src/pages/MovieDetails/MovieDetails.module.css?0c24","pages/MovieDetails/MovieDetails.jsx","services/fetchAPI.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"BackLink\":\"MovieDetails_BackLink__Rbccl\",\"Container\":\"MovieDetails_Container__nukdg\",\"ListInfo\":\"MovieDetails_ListInfo__Vl6B0\",\"List\":\"MovieDetails_List__whW3w\"};","import { useEffect, useRef, useState } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { fetchMovieDetails } from 'services/fetchAPI';\nimport css from './MovieDetails.module.css';\n\nconst MovieDetails = () => {\n  const [movieDetails, setMovieDetails] = useState(null);\n  const location = useLocation();\n  const { movieId } = useParams();\n\n  const backLinkLocationRef = useRef(location.state?.from || '/movies');\n\n  useEffect(() => {\n    fetchMovieDetails(movieId)\n      .then(searchResults => {\n        setMovieDetails(searchResults);\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }, [movieId]);\n\n  if (!movieDetails) {\n    return null;\n  }\n\n  const { poster_path, vote_average, overview, genres, title, release_date } =\n    movieDetails;\n  const imgBaseUrl = 'https://image.tmdb.org/t/p/w500/';\n  const actuallyDate = new Date(release_date);\n\n  return (\n    <>\n      <Link className={css.BackLink} to={backLinkLocationRef.current}>\n        ‚Üê Go back\n      </Link>\n    <div className={css.Container}>\n\n      <img width=\"250px\" src={`${imgBaseUrl}${poster_path}`} alt={title} />\n\n      <div>\n        <h1>\n          {title} ({actuallyDate.getFullYear()})\n        </h1>\n        <p>User Score: {vote_average}</p>\n        <h2>Overview</h2>\n        <p>{overview}</p>\n        <h3>Genres</h3>\n        <ul className={css.List}>\n          {genres.map(genre => (\n            <li className={css.ListItem} key={genre.id}>{genre.name}</li>\n          ))}\n        </ul>\n      </div>\n</div>\n\n      <div className={css.ListInfo}>\n        <p>Additional information</p>\n        <ul>\n          <li>\n            <Link to=\"cast\" state={{ from: backLinkLocationRef }}>\n              Cast\n            </Link>\n          </li>\n          <li>\n            <Link to=\"reviews\" state={{ from: backLinkLocationRef }}>\n              Reviews\n            </Link>\n          </li>\n        </ul>\n        <Outlet />\n      </div></>\n    \n  );\n};\n\nexport default MovieDetails;\n","const API_KEY = 'dfe97c9693096be016a960b4c69a6096';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nconst fetchApi = (url = '') => {\n  return fetch(url).then(response => {\n    if (response.ok) {\n      return response.json();\n    } else return Promise.reject(new Error(`not found `));\n  });\n};\n\nexport const fetchTrendingMovies = () => {\n  return fetchApi(`${BASE_URL}/trending/all/day?api_key=${API_KEY}`);\n};\n\n\nexport const getMovieByName = name => {\n  return fetchApi(`${BASE_URL}/search/movie?api_key=${API_KEY}&query=${name}`);\n};\n\nexport const fetchMovieDetails = movieId => {\n  return fetchApi(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`);\n};\n\nexport const fetchMovieCredits = movieId => {\n  return fetchApi(`${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`);\n};\n\nexport const fetchMovieReviews = movieId => {\n  return fetchApi(`${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`);\n};\n"],"names":["useState","movieDetails","setMovieDetails","location","useLocation","movieId","useParams","backLinkLocationRef","useRef","state","from","useEffect","fetchMovieDetails","then","searchResults","catch","error","console","log","poster_path","vote_average","overview","genres","title","release_date","actuallyDate","Date","className","css","to","current","width","src","alt","getFullYear","map","genre","name","id","API_KEY","BASE_URL","fetchApi","url","fetch","response","ok","json","Promise","reject","Error","fetchTrendingMovies","getMovieByName","fetchMovieCredits","fetchMovieReviews"],"sourceRoot":""}