{"version":3,"file":"static/js/884.e7b6bb09.chunk.js","mappings":"2LAmEA,UA/DqB,WAAO,IAAD,EACzB,GAAwCA,EAAAA,EAAAA,UAAS,MAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACMC,GAAWC,EAAAA,EAAAA,MACTC,GAAYC,EAAAA,EAAAA,MAAZD,QAEFE,GAAsBC,EAAAA,EAAAA,SAAO,UAAAL,EAASM,aAAT,eAAgBC,OAAQ,WAY3D,IAVAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAkBP,GACfQ,MAAK,SAAAC,GACJZ,EAAgBY,EACjB,IACAC,OAAM,SAAAC,GACLC,QAAQC,IAAIF,EACb,GACJ,GAAE,CAACX,KAECJ,EACH,OAAO,KAGT,IAAQkB,EACNlB,EADMkB,YAAaC,EACnBnB,EADmBmB,aAAcC,EACjCpB,EADiCoB,SAAUC,EAC3CrB,EAD2CqB,OAAQC,EACnDtB,EADmDsB,MAAOC,EAC1DvB,EAD0DuB,aAGtDC,EAAe,IAAIC,KAAKF,GAE9B,OACE,4BACE,SAAC,KAAD,CAAMG,GAAIpB,EAAoBqB,QAA9B,SAAuC,gBACvC,0BACE,gBAAKC,IAAG,UAPK,oCAOL,OAAkBV,GAAeW,IAAKP,OAGhD,0BACGA,EAAM,KAAGE,EAAaM,cAAc,QAEvC,yBAAG,eAAaX,MAChB,wBAAI,cACJ,uBAAIC,KACJ,wBAAI,YACJ,wBACGC,EAAOU,KAAI,SAAAC,GAAK,OACf,wBAAoBA,EAAMC,MAAjBD,EAAME,GADA,OAInB,uBAAG,4BACH,2BACE,yBACE,SAAC,KAAD,CAAMR,GAAG,OAAOlB,MAAO,CAAEC,KAAMH,GAA/B,SAAsD,YAIxD,yBACE,SAAC,KAAD,CAAMoB,GAAG,UAAUlB,MAAO,CAAEC,KAAMH,GAAlC,SAAyD,kBAK7D,SAAC,KAAD,MAGL,C,sJCjED,IAAM6B,EAAU,mCACVC,EAAW,+BAEXC,EAAW,WAAe,IAAdC,EAAa,uDAAP,GACtB,OAAOC,MAAMD,GAAK1B,MAAK,SAAA4B,GACrB,OAAIA,EAASC,GACJD,EAASE,OACJC,QAAQC,OAAO,IAAIC,MAAJ,cAC9B,GACF,EAEYC,EAAsB,WACjC,OAAOT,EAAS,GAAD,OAAID,EAAJ,qCAAyCD,GACzD,EAGYY,EAAiB,SAAAd,GAC5B,OAAOI,EAAS,GAAD,OAAID,EAAJ,iCAAqCD,EAArC,kBAAsDF,GACtE,EAEYtB,EAAoB,SAAAP,GAC/B,OAAOiC,EAAS,GAAD,OAAID,EAAJ,kBAAsBhC,EAAtB,oBAAyC+B,GACzD,EAEYa,EAAoB,SAAA5C,GAC/B,OAAOiC,EAAS,GAAD,OAAID,EAAJ,kBAAsBhC,EAAtB,4BAAiD+B,GACjE,EAEYc,EAAoB,SAAA7C,GAC/B,OAAOiC,EAAS,GAAD,OAAID,EAAJ,kBAAsBhC,EAAtB,4BAAiD+B,GACjE,C","sources":["pages/MovieDetails.jsx","services/fetchAPI.js"],"sourcesContent":["import { useEffect, useRef, useState } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { fetchMovieDetails } from 'services/fetchAPI';\n\nconst MovieDetails = () => {\n  const [movieDetails, setMovieDetails] = useState(null);\n  const location = useLocation();\n  const { movieId } = useParams();\n\n  const backLinkLocationRef = useRef(location.state?.from || '/movies');\n\n  useEffect(() => {\n    fetchMovieDetails(movieId)\n      .then(searchResults => {\n        setMovieDetails(searchResults);\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }, [movieId]);\n\n  if (!movieDetails) {\n    return null;\n  }\n\n  const { poster_path, vote_average, overview, genres, title, release_date } =\n    movieDetails;\n  const imgBaseUrl = 'https://image.tmdb.org/t/p/w300/';\n  const actuallyDate = new Date(release_date);\n\n  return (\n    <div>\n      <Link to={backLinkLocationRef.current}>   Go back</Link>\n      <div>\n        <img src={`${imgBaseUrl}${poster_path}`} alt={title} />\n      </div>\n      \n      <h1>\n        {title} ({actuallyDate.getFullYear()})\n      </h1>\n      <p>User Score: {vote_average}</p>\n      <h2>Overview</h2>\n      <p>{overview}</p>\n      <h3>Genres</h3>\n      <ul>\n        {genres.map(genre => (\n          <li key={genre.id}>{genre.name}</li>\n        ))}\n      </ul>\n      <p>Additional information</p>\n      <ul>\n        <li>\n          <Link to=\"cast\" state={{ from: backLinkLocationRef }}>\n            Cast\n          </Link>\n        </li>\n        <li>\n          <Link to=\"reviews\" state={{ from: backLinkLocationRef }}>\n            Reviews\n          </Link>\n        </li>\n      </ul>\n      <Outlet />\n    </div>\n  );\n};\n\nexport default MovieDetails;\n","const API_KEY = 'dfe97c9693096be016a960b4c69a6096';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nconst fetchApi = (url = '') => {\n  return fetch(url).then(response => {\n    if (response.ok) {\n      return response.json();\n    } else return Promise.reject(new Error(`not found `));\n  });\n};\n\nexport const fetchTrendingMovies = () => {\n  return fetchApi(`${BASE_URL}/trending/all/day?api_key=${API_KEY}`);\n};\n\n\nexport const getMovieByName = name => {\n  return fetchApi(`${BASE_URL}/search/movie?api_key=${API_KEY}&query=${name}`);\n};\n\nexport const fetchMovieDetails = movieId => {\n  return fetchApi(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`);\n};\n\nexport const fetchMovieCredits = movieId => {\n  return fetchApi(`${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`);\n};\n\nexport const fetchMovieReviews = movieId => {\n  return fetchApi(`${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`);\n};\n"],"names":["useState","movieDetails","setMovieDetails","location","useLocation","movieId","useParams","backLinkLocationRef","useRef","state","from","useEffect","fetchMovieDetails","then","searchResults","catch","error","console","log","poster_path","vote_average","overview","genres","title","release_date","actuallyDate","Date","to","current","src","alt","getFullYear","map","genre","name","id","API_KEY","BASE_URL","fetchApi","url","fetch","response","ok","json","Promise","reject","Error","fetchTrendingMovies","getMovieByName","fetchMovieCredits","fetchMovieReviews"],"sourceRoot":""}