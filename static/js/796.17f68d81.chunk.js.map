{"version":3,"file":"static/js/796.17f68d81.chunk.js","mappings":"0NACA,EAAuB,sB,SCiDvB,EA3CgB,WACd,OAA8BA,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAiBR,IAfAE,EAAAA,EAAAA,YAAU,WACRH,GAAW,IAEXI,EAAAA,EAAAA,IAAkBH,GACfI,MAAK,SAAAC,GACJR,EAAWQ,EAAcC,QAC1B,IACAC,OAAM,SAAAC,GACLC,QAAQC,IAAIF,EACb,IACAG,SAAQ,WACPZ,GAAW,EACZ,GACJ,GAAE,CAACC,IAECJ,EAIL,OACE,iBAAKgB,UAAWC,EAAhB,UACGf,IAAW,SAACgB,EAAA,EAAD,IACQ,IAAnBlB,EAAQmB,SACP,uBAAG,oDAGL,wBACGnB,EAAQoB,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,QAASC,EAAhB,EAAgBA,OAAhB,OACX,2BACE,0BAAI,YAAUA,MACd,uBAAID,MAFGD,EADE,QASpB,C,uJChDD,IAAMG,EAAU,mCACVC,EAAW,+BAEXC,EAAW,WAAe,IAAdC,EAAa,uDAAP,GACtB,OAAOC,MAAMD,GAAKnB,MAAK,SAAAqB,GACrB,OAAIA,EAASC,GACJD,EAASE,OACJC,QAAQC,OAAO,IAAIC,MAAJ,cAC9B,GACF,EAEYC,EAAsB,WACjC,OAAOT,EAAS,GAAD,OAAID,EAAJ,qCAAyCD,GACzD,EAGYY,EAAiB,SAAAC,GAC5B,OAAOX,EAAS,GAAD,OAAID,EAAJ,iCAAqCD,EAArC,kBAAsDa,GACtE,EAEYC,EAAoB,SAAAlC,GAC/B,OAAOsB,EAAS,GAAD,OAAID,EAAJ,kBAAsBrB,EAAtB,oBAAyCoB,GACzD,EAEYe,EAAoB,SAAAnC,GAC/B,OAAOsB,EAAS,GAAD,OAAID,EAAJ,kBAAsBrB,EAAtB,4BAAiDoB,GACjE,EAEYjB,EAAoB,SAAAH,GAC/B,OAAOsB,EAAS,GAAD,OAAID,EAAJ,kBAAsBrB,EAAtB,4BAAiDoB,GACjE,C","sources":["webpack://react-hw-05-movies/./src/components/Review/Reviews.module.css?b0fb","components/Review/Reviews.jsx","services/fetchAPI.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"List\":\"Reviews_List__l3FuF\"};","import { Loader } from 'components/Loader/Loader';\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieReviews } from 'services/fetchAPI';\nimport css from './Reviews.module.css'\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    setLoading(true);\n\n    fetchMovieReviews(movieId)\n      .then(searchResults => {\n        setReviews(searchResults.results);\n      })\n      .catch(error => {\n        console.log(error);\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  }, [movieId]);\n\n  if (!reviews) {\n    return;\n  }\n\n  return (\n    <div className={css.List}>\n      {loading && <Loader />}\n      {reviews.length === 0 && (\n        <p>Sorry, we don't have any reviews on this movie</p>\n      )}\n\n      <ul>\n        {reviews.map(({ id, content, author }) => (\n          <li key={id}>\n            <h3>Author : {author}</h3>\n            <p>{content}</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Reviews;\n","const API_KEY = 'dfe97c9693096be016a960b4c69a6096';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nconst fetchApi = (url = '') => {\n  return fetch(url).then(response => {\n    if (response.ok) {\n      return response.json();\n    } else return Promise.reject(new Error(`not found `));\n  });\n};\n\nexport const fetchTrendingMovies = () => {\n  return fetchApi(`${BASE_URL}/trending/all/day?api_key=${API_KEY}`);\n};\n\n\nexport const getMovieByName = name => {\n  return fetchApi(`${BASE_URL}/search/movie?api_key=${API_KEY}&query=${name}`);\n};\n\nexport const fetchMovieDetails = movieId => {\n  return fetchApi(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`);\n};\n\nexport const fetchMovieCredits = movieId => {\n  return fetchApi(`${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`);\n};\n\nexport const fetchMovieReviews = movieId => {\n  return fetchApi(`${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`);\n};\n"],"names":["useState","reviews","setReviews","loading","setLoading","movieId","useParams","useEffect","fetchMovieReviews","then","searchResults","results","catch","error","console","log","finally","className","css","Loader","length","map","id","content","author","API_KEY","BASE_URL","fetchApi","url","fetch","response","ok","json","Promise","reject","Error","fetchTrendingMovies","getMovieByName","name","fetchMovieDetails","fetchMovieCredits"],"sourceRoot":""}